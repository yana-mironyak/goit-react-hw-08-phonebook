{"version":3,"file":"static/js/684.2c1ca12a.chunk.js","mappings":"uQAmGA,UA5FqB,WAAO,IAAD,MACjBA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAiEC,EAAAA,EAAAA,MAAzDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAAoBC,EAApD,EAAuCC,UAAaD,OAE9CE,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACpC,OAAQd,GACJ,IAAK,OACD,OAAOC,EAAQa,GACnB,IAAK,QACD,OAAOX,EAASW,GACpB,IAAK,WACD,OAAOT,EAAYS,GACvB,QACI,SAeZ,OACI,SAAC,IAAD,CAAKC,GAAI,CAAEC,SAAU,QAASC,GAAI,QAC9BC,UAAWC,EAAAA,EAAAA,KACXC,UAAU,OACVC,SAAUb,GAfD,SAAAc,GACbC,QAAQC,IAAIF,GACZzB,EAAS4B,EAAAA,EAAAA,SAAwB,CAAEzB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,IACZI,OAMA,UAII,UAAC,IAAD,CAAaiB,WAAS,EAACX,GAAI,CAAEY,IAAK,GAAlC,WACI,SAAC,KAAD,gBACIT,UAAWC,EAAAA,EAAAA,YACXS,KAAK,QACLC,QAAQ,WACRC,MAAM,OACNC,QAAQ,OAACrB,QAAD,IAACA,IAAAA,EAAQV,MACjBgC,WAAkB,OAANtB,QAAM,IAANA,GAAAA,EAAQV,KAAR,OAAeU,QAAf,IAAeA,GAAf,UAAeA,EAAQuB,YAAvB,aAAe,EAAcC,QAAU,MAC/C3B,EAAS,OAAQ,CAAE4B,SAAU,sBAPrC,IASIC,SAAUxB,MACd,SAAC,KAAD,gBACIM,UAAWC,EAAAA,EAAAA,YACXS,KAAK,QACLC,QAAQ,WACRQ,KAAK,QACLP,MAAM,QACNC,QAAQ,OAACrB,QAAD,IAACA,IAAAA,EAAQR,OACjB8B,WAAkB,OAANtB,QAAM,IAANA,GAAAA,EAAQR,MAAR,OAAgBQ,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAQR,aAAxB,aAAgB,EAAegC,QAAU,MACjD3B,EAAS,QAAS,CAAE4B,SAAU,mBAAoBG,QAAS,CAAExB,MA1BzD,uIA0BiFoB,QAAS,uBARtG,IASIK,YAAY,kBACZH,SAAUxB,MACd,SAAC,KAAD,gBACIM,UAAWC,EAAAA,EAAAA,YACXS,KAAK,QACLE,MAAM,WACND,QAAQ,WACRE,QAAQ,OAACrB,QAAD,IAACA,IAAAA,EAAQN,UACjB4B,WAAkB,OAANtB,QAAM,IAANA,GAAAA,EAAQR,MAAR,OAAgBQ,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAQN,gBAAxB,aAAgB,EAAkB8B,QAAU,MACpD3B,EAAS,WAAY,CAAE4B,SAAU,mBAAoBK,UAAW,CAAE1B,MAAO,EAAGoB,QAAS,sBAP7F,IAQIG,KAAK,WAELD,SAAUxB,MACd,SAAC,IAAD,CACIM,UAAWC,EAAAA,EAAAA,aACXkB,KAAK,SACLR,QAAQ,YACRD,KAAK,QAJT,0B,kBC3EhB,KAAgB,KAAO,oBAAoB,YAAc,2BAA2B,aAAe","sources":["views/RegisterView.js","webpack://react-homework-template/./src/views/views.module.css?3bec"],"sourcesContent":["import css from '../views/views.module.css';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux'; \nimport { useState } from 'react';\nimport authOperations from '../redux/auth/authOperations';\nimport { Box, TextField, Button, FormControl } from '@mui/material';\n\nconst RegisterView = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');  \n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    }\n\n    const onSubmit = data => {\n        console.log(data);\n        dispatch(authOperations.register({ name, email, password }));\n        setName('');\n        setEmail('');\n        setPassword('');\n        reset();\n    }\n\n    const emailValidation = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\n\n    return (\n        <Box sx={{ maxWidth: '375px', mx: 'auto' }}\n            className={css.form}\n            component='form'\n            onSubmit={handleSubmit(onSubmit)}>\n            <FormControl fullWidth sx={{ gap: 1 }}>\n                <TextField\n                    className={css.form__field}\n                    size=\"small\"\n                    variant=\"standard\"\n                    label='Name'\n                    error={!!errors?.name}\n                    helperText={errors?.name ? errors?.namr?.message : null}\n                    {...register(\"name\", { required: 'This is required' })}\n                    // placeholder=\"Name\"\n                    onChange={handleChange} />\n                <TextField\n                    className={css.form__field}\n                    size=\"small\"\n                    variant=\"standard\"\n                    type='email'\n                    label='Email'\n                    error={!!errors?.email}\n                    helperText={errors?.email ? errors?.email?.message : null}\n                    {...register(\"email\", { required: 'This is required', pattern: { value: emailValidation, message: 'Check your email' } })}\n                    placeholder=\"email@gmail.com\"\n                    onChange={handleChange} />\n                <TextField\n                    className={css.form__field}\n                    size=\"small\"\n                    label=\"Password\"\n                    variant=\"standard\"\n                    error={!!errors?.password}\n                    helperText={errors?.email ? errors?.password?.message : null}\n                    {...register(\"password\", { required: 'This is required', minLength: { value: 4, message: 'Min length is 4' } })}\n                    type='password'\n                    // placeholder=\"Password\"\n                    onChange={handleChange} />\n                <Button\n                    className={css.form__button}\n                    type='submit'\n                    variant=\"contained\"\n                    size=\"small\">\n                    LogIn\n                </Button>\n            </FormControl>\n        </Box>\n        // <form onSubmit={handleSubmit(onSubmit)}>\n    \n        //     <input {...register(\"name\", { required: 'This is required' })} placeholder=\"Login\" onChange={handleChange}/>\n        //     <p>{errors.name?.message}</p>\n        //     <input  {...register(\"email\", { required: 'This is required', pattern: { value: emailValidation, message: 'Check your email' } })} placeholder=\"Email\" onChange={handleChange}/>\n        //     <p>{errors.email?.message}</p>\n        //     <input {...register(\"password\", { required: 'This is required', minLength: { value: 4, message: 'Min length is 4'} })} type='password' placeholder=\"Password\" onChange={handleChange}/>\n        //     <p>{errors.password?.message}</p>\n      \n        //     <input type=\"submit\" />\n        // </form>\n    );\n}\n\nexport default RegisterView;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"views_form__lRt3V\",\"form__field\":\"views_form__field__aOsjz\",\"form__button\":\"views_form__button__8hffd\"};"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","useForm","register","handleSubmit","reset","errors","formState","handleChange","target","value","sx","maxWidth","mx","className","css","component","onSubmit","data","console","log","authOperations","fullWidth","gap","size","variant","label","error","helperText","namr","message","required","onChange","type","pattern","placeholder","minLength"],"sourceRoot":""}