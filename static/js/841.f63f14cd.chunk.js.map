{"version":3,"file":"static/js/841.f63f14cd.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","views/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"contact\":\"ContactsForm_contact__vVFZD\",\"contactInput\":\"ContactsForm_contactInput__YOzog\",\"contactButton\":\"ContactsForm_contactButton__Bh1fi\",\"contactError\":\"ContactsForm_contactError__mgWVs\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport css from '../ContactsForm/ContactsForm.module.css';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/contactsSlice';\n\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2, 'Your name is too short').required(),\n  number: yup.string().matches(phoneRegExp, 'Phone number should consist of 5 digits').required(),\n})\n\nconst ContactsForm = () => {\n    const [addContact, {isLoading}] = useAddContactMutation();\n    const { data } = useGetContactsQuery();\n\n    const handleSubmit = async ({ name, number }, { resetForm }) => {\n        try {\n            const contactsMatch = data.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n            if (contactsMatch) {\n                alert(`${name} is already in contacts`);\n            } \n            else {\n                await addContact({ name, number });\n                resetForm();\n            }\n            \n        } catch (error) { alert('Error') }   \n    }\n    \n    return <Formik initialValues={{name: '', number: ''}} validationSchema={schema} onSubmit={handleSubmit}>\n        <Form className={css.form} autoComplete='on'>\n        <label className={css.contact} htmlFor='name'>\n            <Field className={css.contactInput}type='text' name='name' placeholder='Name'/>\n            <ErrorMessage className={css.contactError} name='name' component='div'/>\n        </label>\n        <label className={css.contact} htmlFor='number'>\n            <Field className={css.contactInput}type=\"tel\" name=\"number\" placeholder='Number'/>\n            <ErrorMessage className={css.contactError} name='number' component='div'/>\n        </label>\n            <button type='submit' className={css.contactButton} disabled={isLoading}>{\n                isLoading ? 'Adding' : 'Add contact'}</button>\n        </Form>\n    </Formik>\n}\n\nexport default ContactsForm;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"deleteButton\":\"ContactItem_deleteButton__AvFnv\",\"listItem\":\"ContactItem_listItem__NSSYk\"};","import PropTypes from 'prop-types';\nimport css from '../ContactItem/ContactItem.module.css';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst ContactItem = ({ name, number, id }) => {\n    const [deleteContact, result] = useDeleteContactMutation();\n\n    return (\n        <li className={css.listItem}>\n            <Card className={css.contactItem} sx={{\n                width: 200, background: 'linear-gradient(25deg, rgba(2,0,36,1) 3%, rgba(9,109,121,1) 19%, rgba(0,212,255,1) 100%);'\n            }}>\n                <CardContent>\n                    <Typography sx={{ mb: 1.5 }} color=\"white\" >\n                        {name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"white\">\n                        {number}\n                    </Typography>\n                </CardContent>\n                <CardActions sx={{justifyContent: 'right'}}>\n                    <Button sx={{color: '#020024', fontWeight: 700}} className={css.deleteButton} type='button' size=\"small\" onClick={()=>deleteContact(id)} disabled = {result.isLoading}>Delete</Button>\n                </CardActions>\n                </Card>\n        </li>\n    );\n}\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n}","import css from '../ContactsList/ContactsList.module.css'\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { useSelector } from \"react-redux\";\nimport { useGetContactsQuery } from 'redux/contactsSlice';\n\n\nconst ContactsList = () => {\n  const { data } = useGetContactsQuery();\n  const filter = useSelector(state => state.filter);\n\n  const getFilteredContacts = () => {\n      return data.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    };\n\n  return <ul className={css.list}>\n        {data && getFilteredContacts().map(({ id, name, number }) => <ContactItem key={id} id={id} name={name} number={number} />)}\n    </ul>\n}\n\nexport default ContactsList;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"Filter_filterForm__+l+6Q\",\"filterName\":\"Filter_filterName__Y2kKA\",\"filter\":\"Filter_filter__vxThR\"};","import css from '../Filter/Filter.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const changeFilter = (evt) => {\n    dispatch(setFilter(evt.currentTarget.value))\n  };\n  \n  return <div className={css.filterForm}><label className={css.filterName} htmlFor='text'>\n      Find contacts by name\n      <input autoComplete='off' className={css.filter} type='text' value={filter} name='filter' onChange={changeFilter} />\n    </label></div>\n}\n\nexport default Filter;\n\n\n","import ContactsForm from \"components/ContactsForm/ContactsForm\";\nimport ContactsList from \"components/ContactsList/ContactsList\";\nimport Filter from \"components/Filter/Filter\";\n\nconst ContactsView = () => {\n    return (\n        <>\n            <Filter />\n            <ContactsForm />\n            <ContactsList />\n        </>\n    )\n};\n\nexport default ContactsView;"],"names":["schema","yup","shape","name","min","required","number","matches","useAddContactMutation","addContact","isLoading","data","useGetContactsQuery","handleSubmit","resetForm","find","contact","toLowerCase","alert","initialValues","validationSchema","onSubmit","className","css","autoComplete","htmlFor","type","placeholder","component","disabled","id","useDeleteContactMutation","deleteContact","result","Card","sx","width","background","CardContent","Typography","mb","color","variant","CardActions","justifyContent","Button","fontWeight","size","onClick","filter","useSelector","state","includes","map","dispatch","useDispatch","value","onChange","evt","setFilter","currentTarget"],"sourceRoot":""}